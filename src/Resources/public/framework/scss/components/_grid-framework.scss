.grid {

  > .inside {
    display: flex;
    flex: 0 1 auto;
    flex-direction: row;
    flex-wrap: wrap;
    position: relative;
  }

  &.no-gutter {

    > .inside {
      padding-left: 0;
      padding-right: 0;

      > div {
        padding-right: 0;
        padding-left: 0;
        padding-bottom: 0;
      }
    }
  }

  &.align-top > .inside {
    align-items: flex-start;
  }

  &.align-middle > .inside {
    align-items: center;
  }

  &.align-bottom > .inside {
    align-items: flex-end;
  }

  &.align-baseline > .inside {
    align-items: baseline;
  }

  &.auto-height [class*="col-"] > .inside {
    height: 100%;
  }

  &.justify-left > .inside {
    justify-content: flex-start;
  }

  &.justify-center > .inside {
    justify-content: center;
  }

  &.justify-right > .inside {
    justify-content: flex-end;
  }
}

div[class*="col-"]{
  flex-grow: 0;
  flex-shrink: 0;
  padding-right: divide($grid-gutter-width, 2);
  padding-left: divide($grid-gutter-width, 2);
  padding-bottom: $grid-gutter-bottom;
}

$grid-breakpoints: map-merge((0),$breakpoints);

@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint($breakpoint, $grid-breakpoints) {

    @for $i from 1 through $grid-columns {
      div.col#{$infix}-#{$i} {
        flex-basis: percentage($i / $grid-columns);
        max-width: percentage($i / $grid-columns);
      }
    }

    div.col#{$infix}-auto {
      flex-grow: 1;
      flex-basis: 0;
      max-width: 100%;
    }

    div.col#{$infix}-top     { align-self: flex-start; }
    div.col#{$infix}-middle  { align-self: center; }
    div.col#{$infix}-bottom  { align-self: flex-end;}
    div.col#{$infix}-baseline{ align-self: baseline; }
    div.col#{$infix}-stretch { align-self: stretch; }
    div.order#{$infix}-first { order: -1; }
    div.order#{$infix}-last  { order: $grid-columns + 1; }

    @for $i from 0 through $grid-columns {
      div.order#{$infix}-#{$i} { order: $i; }
    }

    @for $i from 0 through ($grid-columns - 1) {
      @if not ($infix == "" and $i == 0) {
        div.offset#{$infix}-#{$i} {
          margin-left: percentage($i / $grid-columns);
        }
      }
    }
  }
}
